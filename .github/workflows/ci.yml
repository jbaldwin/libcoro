name: build

on: [pull_request, workflow_dispatch]

jobs:
    build-ubuntu-20-04:
        name: ubuntu-20.04
        runs-on: ubuntu-latest
        container:
            image: ubuntu:20.04
            env:
                TZ: America/New_York
                DEBIAN_FRONTEND: noninteractive
        steps:
            -   name: apt
                run: |
                    apt-get update
                    apt-get -y upgrade
                    apt install -y build-essential software-properties-common
                    add-apt-repository ppa:ubuntu-toolchain-r/test
                    apt-get install -y \
                        cmake \
                        git \
                        ninja-build \
                        g++-10 \
                        libssl-dev
            -   name: Checkout
                uses: actions/checkout@v2
                with:
                    submodules: recursive
            -   name: build-release-g++
                run: |
                    mkdir build-release-g++
                    cd build-release-g++
                    cmake \
                        -GNinja \
                        -DCMAKE_BUILD_TYPE=Release \
                        -DCMAKE_C_COMPILER=gcc-10 \
                        -DCMAKE_CXX_COMPILER=g++-10 \
                        ..
                    ninja
            -   name: test-release-g++
                run: |
                    cd build-release-g++
                    ctest -VV
    build-ubuntu-22-04:
        name: ubuntu-22.04
        runs-on: ubuntu-latest
        strategy:
            matrix:
                gplusplus_version: [11, 12, 13]
        container:
            image: ubuntu:22.04
            env:
                TZ: America/New_York
                DEBIAN_FRONTEND: noninteractive
        steps:
            -   name: apt
                run: |
                    apt-get update
                    apt-get -y upgrade
                    apt install -y build-essential software-properties-common
                    add-apt-repository ppa:ubuntu-toolchain-r/test
                    apt-get install -y \
                        cmake \
                        git \
                        ninja-build \
                        g++-${{ matrix.gplusplus_version }} \
                        libssl-dev
            -   name: Checkout
                uses: actions/checkout@v2
                with:
                    submodules: recursive
            -   name: build-release-g++
                run: |
                    mkdir build-release-g++
                    cd build-release-g++
                    cmake \
                        -GNinja \
                        -DCMAKE_BUILD_TYPE=Release \
                        -DCMAKE_C_COMPILER=gcc \
                        -DCMAKE_CXX_COMPILER=g++ \
                        ..
                    ninja
            -   name: test-release-g++
                run: |
                    cd build-release-g++
                    ctest -VV
            -   name: build-release-g++-feature-networking-disabled
                run: |
                    mkdir build-release-g++-feature-networking-disabled
                    cd build-release-g++-feature-networking-disabled
                    cmake \
                        -GNinja \
                        -DCMAKE_BUILD_TYPE=Release \
                        -DCMAKE_C_COMPILER=gcc \
                        -DCMAKE_CXX_COMPILER=g++ \
                        -DLIBCORO_FEATURE_NETWORKING=OFF \
                        ..
                    ninja
            -   name: test-release-g++-feature-networking-disabled
                run: |
                    cd build-release-g++-feature-networking-disabled
                    ctest -VV
    build-ubuntu-22-04-clang:
        name: ubuntu-22.04-clang
        runs-on: ubuntu-latest
        strategy:
            matrix:
                clang_version: [16, 17]
        container:
            image: ubuntu:22.04
            env:
                TZ: America/New_York
                DEBIAN_FRONTEND: noninteractive
        steps:
            -   name: apt
                run: |
                    apt-get update
                    apt-get -y upgrade
                    apt install -y build-essential software-properties-common
                    apt-get install -y \
                        wget \
                        cmake \
                        git \
                        ninja-build \
                        libssl-dev
            -   name: install-clang
                run: |
                    wget https://apt.llvm.org/llvm.sh
                    chmod +x llvm.sh
                    ./llvm.sh ${{ matrix.clang_version }}
            -   name: Checkout
                uses: actions/checkout@v2
                with:
                    submodules: recursive
            -   name: build-release-clang++
                run: |
                    mkdir build-release-clang++
                    cd build-release-clang++
                    cmake \
                        -GNinja \
                        -DCMAKE_BUILD_TYPE=Release \
                        -DCMAKE_C_COMPILER=clang-${{ matrix.clang_version }} \
                        -DCMAKE_CXX_COMPILER=clang++-${{ matrix.clang_version }} \
                        ..
                    ninja
            -   name: test-release-clang++
                run: |
                    cd build-release-clang++
                    ctest -VV
            -   name: build-release-clang++-feature-networking-disabled
                run: |
                    mkdir build-release-clang++-feature-networking-disabled
                    cd build-release-clang++-feature-networking-disabled
                    cmake \
                        -GNinja \
                        -DCMAKE_BUILD_TYPE=Release \
                        -DCMAKE_C_COMPILER=clang-${{ matrix.clang_version }} \
                        -DCMAKE_CXX_COMPILER=clang++-${{ matrix.clang_version }} \
                        -DLIBCORO_FEATURE_NETWORKING=OFF \
                        ..
                    ninja
            -   name: test-release-clang++-feature-networking-disabled
                run: |
                    cd build-release-clang++-feature-networking-disabled
                    ctest -VV
    build-fedora-32-to-37:
        name: fedora-${{ matrix.fedora_version }}
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                fedora_version: [32, 33, 34, 35, 36, 37]
        container:
            image: fedora:${{ matrix.fedora_version }}
        steps:
            -   name: dnf
                run: |
                    sudo dnf install -y \
                        cmake \
                        git \
                        ninja-build \
                        gcc-c++ \
                        openssl \
                        openssl-devel
            -   name: Checkout
                uses: actions/checkout@v2
                with:
                    submodules: recursive
            -   name: build-release-g++
                run: |
                    mkdir build-release-g++
                    cd build-release-g++
                    cmake \
                        -GNinja \
                        -DCMAKE_BUILD_TYPE=Release \
                        -DCMAKE_C_COMPILER=gcc \
                        -DCMAKE_CXX_COMPILER=g++ \
                        ..
                    ninja
            -   name: test-release-g++
                run: |
                    cd build-release-g++
                    ctest -VV
            -   name: Build coverage info
                if: ${{ matrix.fedora_version == 32 }}
                run: |
                    sudo dnf install -y \
                        lcov
                    mkdir build-debug-g++
                    cd build-debug-g++
                    cmake \
                        -GNinja \
                        -DLIBCORO_CODE_COVERAGE=ON \
                        -DCMAKE_BUILD_TYPE=Debug \
                        -DCMAKE_C_COMPILER=gcc \
                        -DCMAKE_CXX_COMPILER=g++ \
                        ..
                    ninja
                    ctest -VV
                    gcov -o ./test/CMakeFiles/libcoro_tests.dir/main.cpp.o ./test/libcoro_tests
                    lcov --include "*/inc/coro/*" --include "*/src/*" --exclude "test/*" -o libcoro_tests.info -c -d .
            -   name: Coveralls GitHub Action
                uses: coverallsapp/github-action@v1.0.1
                if: ${{ matrix.fedora_version == 32 }}
                with:
                    github-token: ${{ secrets.GITHUB_TOKEN }}
                    path-to-lcov: build-debug-g++/libcoro_tests.info

    build-opensuse-15:
        name: opensuse-15
        runs-on: ubuntu-latest
        container:
            image: opensuse/leap:15.2
        steps:
            -   name: zypper
                run: |
                    zypper install -y \
                        cmake \
                        git \
                        ninja \
                        gcc10 \
                        gcc10-c++ \
                        openssl \
                        openssl-devel
            -   name: Checkout
                uses: actions/checkout@v2
                with:
                    submodules: recursive
            -   name: build-release-g++
                run: |
                    mkdir build-release-g++
                    cd build-release-g++
                    cmake \
                        -GNinja \
                        -DCMAKE_BUILD_TYPE=Release \
                        -DCMAKE_C_COMPILER=gcc-10 \
                        -DCMAKE_CXX_COMPILER=g++-10 \
                        ..
                    ninja
            -   name: test-release-g++
                run: |
                    cd build-release-g++
                    ctest -VV
    build-windows-2022:
        name: windows-2022
        runs-on: windows-latest
        steps:
            -   name: Checkout
                uses: actions/checkout@v2
                with:
                    submodules: recursive
            -   name: build-release-cl
                run: |
                    mkdir build-release-cl
                    cd build-release-cl
                    cmake ..
                    cmake --build . --config Release
            -   name: test-release-cl
                run: |
                    cd build-release-cl
    build-emscripten-3_1_45:
        name: emscripten-3_1_45
        runs-on: ubuntu-latest
        container:
            image: ubuntu:22.04
            env:
                TZ: America/New_York
                DEBIAN_FRONTEND: noninteractive
        steps:
            -   name: apt
                run: |
                    apt-get update
                    apt-get -y upgrade
                    apt install -y build-essential software-properties-common
                    add-apt-repository ppa:ubuntu-toolchain-r/test
                    apt-get install -y \
                        cmake \
                        git \
                        ninja-build
            -   name: Checkout
                uses: actions/checkout@v2
                with:
                    submodules: recursive
            -   name: install-emsdk
                run: |
                    git clone https://github.com/emscripten-core/emsdk.git
                    cd emsdk
                    ./emsdk install 3.1.45
                    ./emsdk activate 3.1.45
            -   name: build-release-emscripten
                run: |
                    cd emsdk
                    . ./emsdk_env.sh
                    cd ..
                    mkdir build-release-emscripten
                    cd build-release-emscripten
                    emcmake cmake \
                        -GNinja \
                        -DCMAKE_BUILD_TYPE=Release \
                        ..
                    ninja
            -   name: test-release-emscripten
                run: |
                    cd emsdk
                    . ./emsdk_env.sh
                    cd ../build-release-emscripten
                    node --experimental-wasm-eh ./test/libcoro_test.js
